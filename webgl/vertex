attribute vec3 vertexPosition; 
attribute vec4 vertexColor;
attribute vec3 vertexNormal;
attribute vec2 vertexTexture;

uniform mat4 uMVMatrix;
uniform mat4 uPMatrix;
uniform mat3 uNMatrix;

uniform vec3 uLightingDirection;
uniform bool isObject;

varying vec4 vColor;
varying vec3 vLightWeighting;
varying vec2 vTexture;

void main(void) {
    gl_Position = uPMatrix * uMVMatrix * vec4(vertexPosition, 1.0);
    vColor = vertexColor;
    vec3 transNormal = uNMatrix * vertexNormal;
    float direcLightWeighting = max(dot(transNormal, uLightingDirection), 0.0);
    vec3 colors;
    if (isObject) {
        colors = vec3(0.6, 0.6, 0.6);
        vLightWeighting = colors + colors * direcLightWeighting;
    }
    else vLightWeighting = vec3(1, 1, 1);
    vTexture = vertexTexture;
}